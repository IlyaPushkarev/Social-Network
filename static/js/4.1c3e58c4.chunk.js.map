{"version":3,"sources":["components/HOC/withAuth/withAuth.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Forms/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuth","Component","RederictComponent","props","this","to","React","connect","module","exports","DialogItem","path","id","className","classes","dialog","name","Message","message","MessageForm","onSubmit","handleSubmit","Field","type","placeholder","component","Textarea","validate","requiredField","Button","text","reduxForm","form","Dialogs","dialogsElements","dialogs","map","d","i","key","messagesElements","messages","m","dialogsItems","correspondence","messageNew","formData","addMessage","newMessage","compose","messagesPage","newTextMessage","dispatch","addMessageActionCreator"],"mappings":"qNAIIA,EAA6B,SAACC,GAC9B,MAAO,CAACC,OAAQD,EAAME,KAAKD,SAElBE,EAAW,SAACC,GAAa,IAC7BC,EAD4B,uKAGzB,IAAMC,EAAK,eAAOC,KAAKD,OACvB,OAAIA,EAAML,OAGF,kBAACG,EAAcE,GAFX,kBAAC,IAAD,CAAUE,GAAI,eALD,GACFC,IAAML,WAWtC,OAFkCM,YAAQX,EAARW,CAAoCL,K,oBChBzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,eAAiB,gCAAgC,WAAa,8B,oBCAjMD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,iHCYZC,EATG,SAACP,GAChB,IAAIQ,EAAO,YAAcR,EAAMS,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,QACpB,kBAAC,IAAD,CAASV,GAAIM,GAAb,IAAqBR,EAAMa,KAA3B,O,kBCCGC,EANC,SAACd,GACb,OACI,yBAAKU,UAAWC,IAAQI,SAAUf,EAAMe,U,kDCE5CC,EAAc,SAAChB,GAEf,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAON,KAAM,aACNO,KAAK,OACLC,YAAY,iBACZC,UAAWC,IACXC,SAAU,CAACC,QAGtB,6BACI,kBAACC,EAAA,EAAD,CAAQC,KAAM,YAUdX,EAJhBA,EAAcY,YAAU,CACpBC,KAAM,WADID,CAEXZ,GC4BYc,EAhDC,SAAC9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,QAAQC,KAAI,SAACC,EAAEC,GAAH,OAAS,kBAAC,EAAD,CAAYtB,KAAMqB,EAAErB,KAAMJ,GAAIyB,EAAEzB,GAAI2B,IAAKF,EAAEzB,QAExF4B,EAAmBrC,EAAMsC,SAASL,KAAI,SAACM,EAAEJ,GAAH,OAAS,kBAAC,EAAD,CAASpB,QAASwB,EAAExB,QAASqB,IAAKG,EAAE9B,QAQvF,OAAIT,EAAML,OAMN,yBAAKe,UAAWC,IAAQqB,SAEpB,yBAAKtB,UAAWC,IAAQ6B,cACnBT,GAGL,yBAAKrB,UAAWC,IAAQ8B,gBAEpB,yBAAM/B,UAAWC,IAAQ2B,UACpBD,GAGL,yBAAK3B,UAAWC,IAAQ+B,YASZ,kBAAC,EAAD,CAAazB,SAjCjB,SAAC0B,GACjB3C,EAAM4C,WAAWD,EAASE,YAC1BF,EAASE,WAAa,SAMlB,kBAAC,IAAD,CAAU3C,GAAI,Y,wBCOX4C,sBACX1C,aAtBkB,SAACV,GACnB,MAAO,CACHsC,QAAStC,EAAMqD,aAAaf,QAC5BM,SAAU5C,EAAMqD,aAAaT,SAC7BU,eAAgBtD,EAAMqD,aAAaC,eACnCrD,OAAQD,EAAME,KAAKD,WAGF,SAACsD,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,EAASC,YAAwBL,SAYzChD,IAFWiD,CAGbhB","file":"static/js/4.1c3e58c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=>{\r\n    return {isAuth: state.auth.isAuth,}\r\n}\r\nexport const withAuth = (Component)=>{\r\n   class RederictComponent extends React.Component{\r\n        render(){\r\n            const props = {...this.props,}\r\n            if(!props.isAuth){\r\n                return (<Redirect to={\"/login\"} />)\r\n            }\r\n            return (<Component {...props}/>)\r\n        }\r\n    }\r\n    let connectedRederictComponent = connect(mapStateToPropsForRedirect)(RederictComponent);\r\n\r\n   return connectedRederictComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__vTY2L\",\"dialogsItems\":\"Dialogs_dialogsItems__g3YFi\",\"active\":\"Dialogs_active__3HU8D\",\"correspondence\":\"Dialogs_correspondence__1tVK4\",\"messageNew\":\"Dialogs_messageNew__3xxHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__26nXr\",\"active\":\"DialogItem_active__1_56K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__15WEc\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props)=>{\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default DialogItem;","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Button from \"../../common/Button/Button\";\r\n\r\nimport {requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet MessageForm = (props)=>{\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newMessage\"}\r\n                       type=\"text\"\r\n                       placeholder=\"Insert message\"\r\n                       component={Textarea}\r\n                       validate={[requiredField ,]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button text={\"SEND\"} />\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\nMessageForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\n\r\nexport default  MessageForm;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport MessageForm from \"../Forms/MessageForm/MessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map((d,i) => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n\r\n    let messagesElements = props.messages.map((m,i) => <Message message={m.message} key={m.id}/>);\r\n\r\n    let onSendMessage = (formData)=>{\r\n        props.addMessage(formData.newMessage);\r\n        formData.newMessage = \"\";\r\n    }\r\n\r\n\r\n    if(!props.isAuth){\r\n        return (\r\n            <Redirect to={\"/login\"} />\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={classes.correspondence}>\r\n\r\n                <div  className={classes.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n                <div className={classes.messageNew}>\r\n\r\n{\r\n                           /*\r\n                            <textarea ref={newMessageElem} onChange={onChangeTextarea} value={props.newTextMessage}></textarea>\r\n                            <button onClick={onAddMessage}>Send</button>\r\n                            <Button onClick={onAddMessage} text={\"SEND\"}/>\r\n                            */\r\n}\r\n                            <MessageForm onSubmit = {onSendMessage}\r\n                            />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","// import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuth} from \"../HOC/withAuth/withAuth\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        newTextMessage: state.messagesPage.newTextMessage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addMessage: (newMessage)=>{\r\n            dispatch(addMessageActionCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\n/*compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuth,\r\n)(Dialogs);*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuth,\r\n)(Dialogs);\r\n/*\r\nconst DialogsWithAuth = withAuth(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWithAuth);\r\n\r\nexport default DialogsContainer;*/\r\n"],"sourceRoot":""}